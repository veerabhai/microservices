# Use openjdk's 8-jre as the base image
FROM openjdk:8-jre

# Get the profile argument
ARG PROFILE
ARG ISY_RABBITMQ_USERNAME
ARG ISY_RABBITMQ_PASSWORD
ARG ISY_APEX_DOMAIN
ARG ISY_ADMIN_SUB_DOMAIN
ARG MASTER_DB_HOST
ARG MASTER_DB_SERVER_PORT
ARG MASTER_DB_NAME
ARG MASTER_DB_USERNAME
ARG MASTER_DB_PASSWORD
ARG CONTAINER_BASE_DIRECTORY=/opt/apps/docker/container
ARG ARTIFACT_NAME
ARG SERVICE_PORT
ARG ROOT_ARTIFACT_ID
ARG ISY_AWS_ACCESS_KEY
ARG ISY_AWS_SECRET_KEY
ARG DB_HOST
ARG DB_SERVER_PORT
ARG DB_NAME
ARG DB_USERNAME
ARG DB_PASSWORD
# Environment variables
ENV PROFILE=${PROFILE} \
    ISY_RABBITMQ_USERNAME=${ISY_RABBITMQ_USERNAME} \
    ISY_RABBITMQ_PASSWORD=${ISY_RABBITMQ_PASSWORD} \
    ISY_AWS_ACCESS_KEY=${ISY_AWS_ACCESS_KEY} \
    ISY_AWS_SECRET_KEY=${ISY_AWS_SECRET_KEY} \
    ISY_APEX_DOMAIN=${ISY_APEX_DOMAIN} \
    ISY_ADMIN_SUB_DOMAIN=${ISY_ADMIN_SUB_DOMAIN} \
    MASTER_DB_HOST=${MASTER_DB_HOST} \
    MASTER_DB_SERVER_PORT=${MASTER_DB_SERVER_PORT} \
    MASTER_DB_NAME=${MASTER_DB_NAME} \
    MASTER_DB_USERNAME=${MASTER_DB_USERNAME} \
    MASTER_DB_PASSWORD=${MASTER_DB_PASSWORD} \
    DB_HOST=${DB_HOST} \
    DB_SERVER_PORT=${DB_SERVER_PORT} \
    DB_NAME=${DB_NAME} \
    DB_USERNAME=${DB_USERNAME} \
    DB_PASSWORD=${DB_PASSWORD} \
    CONTAINER_BASE_DIRECTORY=${CONTAINER_BASE_DIRECTORY} \
    SERVICE_PORT=${SERVICE_PORT} \
    ARTIFACT_NAME=${ARTIFACT_NAME}

# Copy the artifact jar
ADD target/${ARTIFACT_NAME} ${CONTAINER_BASE_DIRECTORY}/${ARTIFACT_NAME}

# Change permissions
RUN bash -c 'touch ${CONTAINER_BASE_DIRECTORY}/${ARTIFACT_NAME}'

# Expose the port
EXPOSE ${SERVICE_PORT}

# Command that will be executed to startup the container
CMD ["bash", "-c", "java -Dspring.profiles.active=$PROFILE -DXms512m -jar ${CONTAINER_BASE_DIRECTORY}/${ARTIFACT_NAME}"]
